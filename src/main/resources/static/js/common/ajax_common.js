var commonJS = {/*共用js*/    //调用公用异步请求方法   ajaxObj对象主要包含请求参数(封装成对象)、请求地址url    "sendAjaxRequest": function (ajaxObj, callbackFn) {        var url = ajaxObj.url;        var param = ajaxObj.param;        var async = ajaxObj.async;//true、false 判断异步请求的类型，同步还是异步        var traditional = ajaxObj.traditional;//true、false 判断异步请求的类型，同步还是异步        var contentType= ajaxObj.contentType;//参数类型        var method = ajaxObj.method;        if (!ajaxObj.hasOwnProperty("async")) async = true;        if (!ajaxObj.hasOwnProperty("traditional")) traditional = false;        if (!ajaxObj.hasOwnProperty("contentType")) contentType = "application/x-www-form-urlcoded";        if (!method) method = "GET";        if (!param) param = {};/*参数不存在 就给一个默认的参数*/        //按钮暂时禁用        $(".autoDisable").attr("disabled", true);        //定时清除禁用        var timeId =setTimeout(function () {            $(".autoDisable").removeAttr("disabled");        },10000);        $.ajax({            type: method,            url: url,            data: param,            async: async,            dataType: 'json',            contentType:contentType,            traditional: traditional,            beforeSend:function (xhr) {                var token = $("meta[name='_csrf']").attr("content");                var header = $("meta[name='_csrf_header']").attr("content");                xhr.setRequestHeader(header, token);            },            success: function (json) {                //解除按钮暂时禁用                $(".autoDisable").removeAttr("disabled");                //删除定时任务                clearTimeout(timeId);                if (callbackFn && typeof callbackFn === 'function') {                    callbackFn(json);                }            },            error: function (jqXHR, textStatus, errorThrown) {                //解除按钮暂时禁用                $(".autoDisable").removeAttr("disabled");                //删除定时任务                clearTimeout(timeId);                $('#loading', parent.document).hide();                // 添加200返回码处理,之前被处理为服务器错误了                if(jqXHR.status===403){/*登录已过期*/                    toastObj.toastMsg(false, false, "toast-top-right", "info", "登录已超时，请重新登录。");                    window.location.href="/logout"                }else if(jqXHR.status!=200){                    toastObj.toastMsg(false, false, "toast-top-right", "error", "请提稍后再试吧, 服务开小差了");                }            }        });    },    "tips" : function(msg){        if(msg)  toastObj.toastMsg(true, true, "toast-top-right", "error",msg);;    }};(function($){  $.fn.serializeJson=function(){    var serializeObj={};    var array=this.serializeArray();    var str=this.serialize();    $(array).each(function(){      if(serializeObj[this.name]){        if($.isArray(serializeObj[this.name])){          serializeObj[this.name].push(this.value);        }else{          serializeObj[this.name]=[serializeObj[this.name],this.value];        }      }else{        serializeObj[this.name]=this.value;      }    });    return serializeObj;  };})(jQuery);