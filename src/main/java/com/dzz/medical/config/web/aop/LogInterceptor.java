package com.dzz.medical.config.web.aop;import lombok.extern.slf4j.Slf4j;import org.aspectj.lang.ProceedingJoinPoint;import org.aspectj.lang.annotation.Around;import org.aspectj.lang.reflect.MethodSignature;/** * 日志拦截器，记录访问日志,响应时间 * * @author dzz * @since  2017年06月07 下午2:07 * @version  1.0.0 *///@Aspect//@Component@Slf4jpublic class LogInterceptor {    /**     * 日志切面，Controller层打印请求方法执行时间     * @param point 切点     * @return 返回处理结果     */    @Around("execution(* com.bzn.central.admin.controller..*(..)) && " +            "@annotation(org.springframework.web.bind.annotation.RequestMapping)")    public Object interceptor(ProceedingJoinPoint point) {        long startTime = System.currentTimeMillis();        MethodSignature signature = (MethodSignature) point.getSignature();        Object object = null;        try {            log.info("开始执行方法{}",signature.getMethod().getName());            object =  point.proceed();            log.info("执行完毕,所花时间为:{}毫秒",System.currentTimeMillis()-startTime);        } catch (Throwable throwable) {            log.error("日志切面异常了",throwable);        }        return object;    }}