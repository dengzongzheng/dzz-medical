package com.dzz.medical.config.web.security;import com.dzz.medical.common.response.ResponseDzz;import com.dzz.medical.controller.system.domain.bo.AdminUserDetailBO;import com.dzz.medical.controller.system.domain.bo.SystemUserDetailsBO;import com.dzz.medical.controller.system.service.BsAdminUserService;import java.util.HashSet;import java.util.Set;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.security.core.GrantedAuthority;import org.springframework.security.core.userdetails.UserDetails;import org.springframework.security.core.userdetails.UserDetailsService;import org.springframework.security.core.userdetails.UsernameNotFoundException;import org.springframework.stereotype.Component;import org.springframework.util.StringUtils;/** * 用户数据服务 * @author dzz * @since  2017年04月20 上午9:52 * @version  1.0.0 */@Component@Slf4jpublic class SelfUserDetailsService implements UserDetailsService {    @Autowired    private BsAdminUserService bsAdminUserService;    /**     * 用户认证     * @param userName 用户名     * @return 用户实体     * @throws UsernameNotFoundException 未找到相关用户异常     */    @Override    public UserDetails loadUserByUsername(String userName) throws UsernameNotFoundException {        if (StringUtils.isEmpty(userName)) {            throw new UsernameNotFoundException("用户名不能为空");        }        ResponseDzz<AdminUserDetailBO> responseDzz = bsAdminUserService.selectByAccount(userName);        if (responseDzz.checkFail() || null == responseDzz.getData()) {            return null;        }        Set<GrantedAuthority> authorities = new HashSet<>();        SystemUserDetailsBO user = new SystemUserDetailsBO(userName, responseDzz.getData().getPassword(), true,                true, true, true, authorities);        user.setUserId(responseDzz.getData().getUserId());        user.setStatus(Integer.valueOf(responseDzz.getData().getStatus()));        user.setUserAccount(responseDzz.getData().getAccount());        user.setDepartmentId(responseDzz.getData().getDepartmentId());        user.setRoleType(responseDzz.getData().getRoleType());        return user;    }}